$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

/* universal reset which includes after and before pseudo elements as well - we increased the spectrum of coverage */
*,
*::after,
*::before {
	margin: 0;
	padding: 0;
	box-sizing: inherit;
	/* we moved the border-box definition to body and here provided inherit - its a better implementation */
}

html {
	/*root font size is always selected in the html element */
	/* change default font-size=10px => 10/16*100=62.5% is now 1rem */
	font-size: 62.5%;
}

/* universal override using inheritance of body element */
body {
	font-family: "Lato", sans-serif;
	font-weight: 400;
	/* font-size: 16px; */
	/* we defined the 1rem=10px @ html body thats why font-size definition here became absolute */
	line-height: 1.7;
	color: #777;
	padding: 3rem;
	box-sizing: border-box;
}

.header {
	height: 95vh;
	background-image: linear-gradient(
			to right bottom,
			rgba($color-primary-light, 0.8),
			rgba($color-primary-dark, 0.8)
		),
		url(../img/hero.jpg);
	background-size: cover;
	background-position: top;
	clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

	position: relative;
	/* for logo-box position */
}

.header__logo-box {
	position: absolute;
	top: 4rem;
	left: 4rem;
}

.header__logo {
	height: 3.5rem;
}

.header__text-box {
	/* alignment via absolute */
	/* position: absolute;
	top: 40%;
	left: 50%;
	transform: translate(-50%, -50%); */
	/* text-align: center; */
	/* alignment via flex */
	height: 75vh;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-direction: column;
}

.heading-primary {
	color: #fff;
	text-transform: uppercase;
	margin-bottom: 6rem;

	/* conceals the animation artifacts */
	/* as of 2022 can not experience the artifact phenamena in chrome browser */
	backface-visibility: hidden;
}

.heading-primary--main {
	display: block;
	/* span elements are by nature inline needs display: block to be on top of each other */

	font-size: 6rem;
	font-weight: 400;
	letter-spacing: 3.5rem;

	animation-name: moveInLeft;
	animation-duration: 1s;
	animation-timing-function: ease-out;
	/* animation-iteration-count: 3; */
	/* animation-delay: 3s; */
}

.heading-primary--sub {
	display: block;
	/* span elements are by nature inline needs display: block to be on top of each other */

	font-size: 2rem;
	font-weight: 700;
	letter-spacing: 1.75rem;

	animation: moveInRight 1s ease-out;
	/* animation-name: moveInRight;
	animation-duration: 1s;
	animation-timing-function: ease-out; */
}

/* browsers are optimized only to work with opacity and transform properties */
/* define moveInLeft named animation */
@keyframes moveInLeft {
	0% {
		opacity: 0;
		transform: translateX(-100px);
		/* transform: translateX(-100px) rotate(45deg); */
		/* could apply multiple transforms at the same time */
	}
	80% {
		transform: translateX(1rem);
	}
	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

/* define moveInRight named animation */
@keyframes moveInRight {
	0% {
		opacity: 0;
		transform: translateX(10rem);
	}
	80% {
		transform: translateX(-1rem);
	}
	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

/* define moveInBottom named animation */
@keyframes moveInBottom {
	0% {
		opacity: 0;
		transform: translateY(3rem);
	}
	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

/* we would like to style <a> tags for its both link and visited states */
.btn:link,
.btn:visited {
	display: inline-block;
	/* for <a> elements padding to work we would need inline-block */

	text-transform: uppercase;
	text-decoration: none;
	font-size: 1.6rem;
	padding: 1.5rem 4rem;
	border-radius: 100rem;
	transition: all 0.3s;
	/* make everything available for smooth transitions @ the initial state (link,visited) for hover and active states */

	position: relative;
	/* for btn::after pseudo element */
}

.btn:hover {
	transform: translateY(-0.3rem);
	/* Y top to bottom , we want to move up so takes neg value */
	box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
	transform: translateY(-0.1rem);
	/* Y top to bottom , we want to move up so takes neg value */
	box-shadow: 0px 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
	background-color: #fff;
	color: #777;
}

.btn::after {
	content: "";
	display: inline-block;
	/* in pseudo elements content + inline-block need to be specified no matterwhat */
	height: 100%;
	width: 100%;
	border-radius: 100rem;

	/* set the pseudo element behind the button itself */
	position: absolute;
	top: 0;
	left: 0;
	z-index: -1;

	transition: all 0.4s;
}

.btn--white::after {
	background-color: #fff;
}

/* after pseudo element @ btn:hover state */
.btn:hover::after {
	transform: scaleX(1.5) scaleY(1.6);
	opacity: 0;
}

.btn--animated {
	animation: moveInBottom 0.5s ease-out 0.5s;
	animation-fill-mode: backwards;
}
