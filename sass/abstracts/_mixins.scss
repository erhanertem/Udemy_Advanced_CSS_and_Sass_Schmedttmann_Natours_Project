// partial files always start with an underscore

@mixin clearfix {
	&::after {
		content: "";
		display: table;
		clear: both;
	}
}

@mixin absCenter {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGEMENT
/*
0-600px         --> PHONE
600-900px       --> TABLET PORTRAIT
900-1200px      --> TABLET LANDSCAPE
[1200px-1800px] --> OUR NORMAL STYLE / REGULAR DESKTOP
1800px+         --> BIG DESKTOP
*/

//NOTE: @content directive is a SASS placeholder which refers to what ever we typed @include respond-phone {....}
/* single media query call */
// @mixin respond-phone {
// 	@media (max-width: 600px) {
// 		@content;
// 	}
// }

/*
$breakpoint arguments:
-phone
-tab-port
-tab-land
-big-desktop

1 em = 16px

*/
/* variable media query call */
// NOTE: @if directive is a SASS logic processing statement like in any coding languages
// @mixin respond($breakpoint) {
// 	@if $breakpoint == phone {
// 		@media (max-width: 37.5em) {
// 			@content;
// 		}
// 	} // 600px --> 600/16=37.5
// 	@if $breakpoint == tab-port {
// 		@media (max-width: 56.25em) {
// 			@content;
// 		}
// 	} // 900px
// 	@if $breakpoint == tab-land {
// 		@media (max-width: 75em) {
// 			@content;
// 		}
// 	} // 1200px
// 	@if $breakpoint == big-desktop {
// 		@media (min-width: 112.5em) {
// 			@content;
// 		}
// 	}
// } // 1800px

$phone: 600px;
$tablet-portrait: 900px;
$tablet-landscape: 1200px;
$big-desktop: 1800px;

@mixin break($breakpoint) {
	@if $breakpoint <= $tablet-landscape {
		@media (max-width: calc(calc($breakpoint/16px) * 1em)) {
			@content;
		}
	} @else {
		// anything above $tablet-landscape min-width
		@media (min-width: calc(calc($breakpoint/16px) * 1em)) {
			@content;
		}
	}
}
