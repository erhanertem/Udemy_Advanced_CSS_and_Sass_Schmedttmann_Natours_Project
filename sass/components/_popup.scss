// partial files always start with an underscore
@import "../abstracts/variables";
//
.popup {
	height: 100vh;
	width: 100%;
	background-color: rgba($color-black, 0.8);
	z-index: 2000;

	position: fixed;
	top: 0;
	left: 0;

	// blur the background not in focus and lighten the black dimming from .8 to .3 if blur is supported by the browser
	@supports (-webkit-backdrop-filter: blur(10px)) or
		(backdrop-filter: blur(10px)) {
		-webkit-backdrop-filter: blur(10px);
		backdrop-filter: blur(10px);
		background-color: rgba($color-black, 0.3);
	}

	/* Hide the popup @ initial state */
	/* NOTE: Hide the elements - display: none is not animatable so we dont use it here */
	/* 1) Hide it visually but links seize to exist active */
	opacity: 0;
	/* 2) Make it unaccessible to mouse and keyboard */
	pointer-events: none;
	/* 3)  Hide it from screen readers */
	visibility: hidden;

	-webkit-transition: all 0.3s;

	-o-transition: all 0.3s;

	transition: all 0.3s;

	// target pseudo class is selected when an anchor element is clicked with a corresponding #target id
	&:target {
		/* Unhide the popup after anchot element clicked */
		/* NOTE: Hide the elements - display: none is not animatable so we dont use it here */
		/* 1) Hide it visually but links seize to exist active */
		opacity: 1;
		/* 2) Make it unaccessible to mouse and keyboard */
		pointer-events: auto;
		/* 3)  Hide it from screen readers */
		visibility: visible;
	}

	// popup close anchor link/button
	&__clear {
		&:link,
		&:visited {
			color: $color-grey-dark;
			position: absolute;
			top: 2.5rem;
			right: 2.5rem;
			font-size: 3rem;
			line-height: $default-font-size;
			text-decoration: none;

			display: inline-block;

			-webkit-transition: all 0.3s;

			-o-transition: all 0.3s;

			transition: all 0.3s;
		}

		&:hover,
		&:active {
			color: $color-primary;
		}
	}

	&__content {
		width: 75%;
		border-radius: 3px;
		overflow: hidden;
		background-color: $color-white;
		-webkit-box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
		box-shadow: 0 2rem 4rem rgba($color-black, 0.2);

		// centerline to popup background
		@include absCenter;

		// set intitial state for the popup__content box animation
		opacity: 0;
		-webkit-transform: translate(-50%, -50%) scale(0.3);
		-ms-transform: translate(-50%, -50%) scale(0.3);
		transform: translate(-50%, -50%) scale(0.3);
		// IMPORTANT: since mixin absCenter also has a transform, needs to be included here as well otherwise one overrides another. Only one transform could live within a block!!
		-webkit-transition: all 0.3s 0.3s;
		-o-transition: all 0.3s 0.3s;
		transition: all 0.3s 0.3s;
		//second timing is for the delay. With that black transparent background gets loaded first and popup appears the next.

		display: table;
		// this element acts as a table for the table cells below
	}

	// when popup gets targetted the popup__content gets...
	&:target &__content {
		// set intitial state for the popup__content box animation
		opacity: 1;
		-webkit-transform: translate(-50%, -50%) scale(1);
		-ms-transform: translate(-50%, -50%) scale(1);
		transform: translate(-50%, -50%) scale(1);
	}

	&__left {
		width: 33.35%;

		display: table-cell;
	}

	&__right {
		width: 66.65%;
		padding: 3rem 5rem;

		display: table-cell;
		vertical-align: middle; //table cell alignment property
	}
	&__img {
		display: block;

		width: 100%;
	}
	&__text {
		font-size: 1.4rem;
		margin-bottom: 4rem;

		-webkit-column-count: 2;

		-moz-column-count: 2;

		column-count: 2; // 2 columns of text
		-webkit-column-gap: 4em;
		-moz-column-gap: 4em;
		column-gap: 4em; //1em = 14px -current font size
		-webkit-column-rule: 1px solid $color-grey-light-2;
		-moz-column-rule: 1px solid $color-grey-light-2;
		column-rule: 1px solid $color-grey-light-2;

		// hypenation
		-webkit-hyphens: auto;
		-ms-hyphens: auto;
		hyphens: auto;
	}
}
