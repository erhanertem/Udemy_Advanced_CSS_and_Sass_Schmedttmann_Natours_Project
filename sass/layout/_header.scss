// partial files always start with an underscore
@import "../abstracts/variables";
//
// header is a layout element that is repeated across pages. So we put it under the layout category
.header {
	height: 85vh;
	background-image: linear-gradient(
			to right bottom,
			rgba($color-primary-light, 0.8),
			rgba($color-primary-dark, 0.8)
		),
		url(../img/hero-small.jpg);
	background-size: cover;
	background-position: top;

	// if clippath either form is supported by the browser implement clip-path
	@supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
		-webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
		clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
		height: 95vh;
	}

	position: relative;
	/* for logo-box position */

	// CSS IMPLEMENTATION OF RESPONSIVE IMAGE METHODOLOGY
	// Responsive image implementation in CSS.
	// If HDPI screen and above 600px~ 600/16 = 37.5em  breakpoint threshold use hero.jpg else default to hero-small.jpg disclosed above
	// Media queriers are always in em values not pixel for widths
	@media only screen and (min-resolution: 192dpi) and (min-width: 37.5em) {
		background-image: linear-gradient(
				to right bottom,
				rgba($color-primary-light, 0.8),
				rgba($color-primary-dark, 0.8)
			),
			url(../img/hero.jpg);
	}

	// If screen is not a HDPI and above 1600px~ 1600/16=100em breakpoint threshold use hero.jpg
	@media only screen and (min-width: 100em) {
		background-image: linear-gradient(
				to right bottom,
				rgba($color-primary-light, 0.8),
				rgba($color-primary-dark, 0.8)
			),
			url(../img/hero.jpg);
	}

	@include break($tablet-landscape) {
		clip-path: polygon(0 0, 100% 0, 100% 82vh, 0 100%);
	}
	@include break($tablet-portrait) {
		clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
	}
	@include break($phone) {
		clip-path: polygon(0 0, 100% 0, 100% 90vh, 0 100%);
	}

	&__logo-box {
		position: absolute;
		top: 4rem;
		left: 4rem;
	}

	&__logo {
		height: 3.5rem;
	}

	&__text-box {
		/* alignment via absolute */
		/* position: absolute;
	top: 40%;
	left: 50%;
	transform: translate(-50%, -50%);
	text-align: center; */
		/* alignment via flex */
		height: 75vh;
		display: flex;
		align-items: center;
		justify-content: center;
		flex-direction: column;
	}
}
